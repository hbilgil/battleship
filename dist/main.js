(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@200&display=swap);"]),a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Black+Ops+One&display=swap);"]),a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton&display=swap);"]),a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Big+Shoulders+Stencil+Display:wght@800&display=swap);"]),a.push([n.id,"/*-----GLOBAL DECLARATIONS-----*/\n\n*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\n:root {\n    --cell-border-color:white;\n    --grid-cols: 1;\n    --grid-rows: 1;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-items: space-between;\n    justify-content: space-between;\n    font-family: 'Nunito', sans-serif;\n    background-color:lightgrey;\n    min-height: 100vh;\n}\n\n/*---HEADER SECTION---*/\n\n.header {\n    font-family: 'Black Ops One', cursive;\n    background-color: black;\n    opacity: 0.8;\n    color: white;\n    font-size: 8vw;\n    letter-spacing: 2vw;\n    line-height: 22vh;\n    text-align: center;\n}\n\n/*---MAIN DIV---*/\n\n.main{\n    display: flex;\n    justify-content: center;\n    margin-top: 1vh;\n}\n\n.board-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.board-header {\n    font-family: 'Anton', sans-serif;\n    font-size: 1.5vw;\n    letter-spacing: 0.5vw;\n}\n\n.player {\n    color: green;\n}\n.enemy {\n    color:crimson;\n}\n\n.board {\n    height: fit-content;\n    width: fit-content;\n    margin: 2rem;\n    display: grid;\n    grid-template-rows: repeat(var(--grid-rows), 4vh);\n    grid-template-columns: repeat(var(--grid-cols), 4vh);\n    gap: 1px;\n    border: 3px solid black;\n}\n\n.grid-item {\n    border: 0ch solid gainsboro;\n    background: var(--cell-border-color);\n}\n\n#board-enemy .grid-item {\n    cursor: pointer;\n}\n\n.miss {\n    background-color:rgb(28, 217, 154);\n    cursor: not-allowed !important;\n}\n\n.hit {\n    background-color: crimson !important;\n    cursor: not-allowed !important; \n}\n\n/*---FOOTER SECTION---*/\n\n.footer {\n    font-size: 20px;\n    font-weight: 800;\n    text-align: center;\n    padding: 5px;\n    background-color: black;\n    opacity: 0.8;\n    color: white;\n}\n  \n.footer a:link { \n    text-decoration: none;\n    color: white;\n}\n  \n.footer a:visited { \n    text-decoration: none;\n    color: white;\n}\n  \n.footer a:hover { \n    text-decoration: none;\n    transition: 0.3s ease;\n    color:fuchsia;\n}\n  \n.footer a:active { \n    text-decoration: none;\n    color: white;\n}\n\n/*-----HIDDEN PARTS-----*/\n\n/*--Overlay Window--*/\n\n.overlay-window {\n    display: none; /*invisible when inactive*/\n    position: absolute; /*the div will be fixed even if mouse scrolled down*/\n    top: 0; /*exact place of the div*/\n    left: 0; /*exact place of the div*/\n    width: 100%;\n    min-height: 100%;\n    background-color:black;\n    opacity: 0.7;\n}\n\n.overlay-window.active {\n    display: block;\n}\n\n.end-game-modal,\n.start-game-modal {\n    display: none;\n    position: fixed;\n    z-index: 1; /*the div will be in front of the overlayWindow*/\n    top: 50%; /*exact place of the div*/\n    left: 50%; /*exact place of the div*/\n    transform: translate(-50%, -50%) scale(0); /*will be animated*/\n    transition: 200ms ease-in-out;\n    box-shadow: 0 0 50px rgba(249, 248, 248, 0.5);\n    background-color:gainsboro;\n}\n\n.end-game-modal {\n    width: 40%;\n    min-height: 30%;\n    padding: 2vw;\n    border-radius: 8px;\n}\n\n.start-game-modal {\n    width: 50%;\n    min-height: 80%;\n    padding: 2vw;\n}\n\n.end-game-modal.active,\n.start-game-modal.active {\n    display: block;\n    transform: translate(-50%, -50%) scale(1);\n    animation: fadeIn 1s;\n}\n\n.end-game-modal-content, \n.start-game-modal-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.end-game-modal-content{\n    gap: 2vh;\n}\n\n.start-game-modal-content  {\n    gap: 2vh;\n}\n\n.end-game-modal-message {\n    font-size: 4vw;\n    font-family: 'Big Shoulders Stencil Display', cursive;\n    font-weight: bold;\n    padding: 20px;\n    text-align: center;\n}\n\n.welcome-msg {\n    font-size: 4vh;\n    font-family: 'Big Shoulders Stencil Display', cursive;\n    font-weight: bold;\n}\n\n.place-ship-txt {\n    font-size: 2.5vh;\n    font-weight: 800;\n}\n\n.info {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 3vh;\n    gap: 2vw;\n}\n\n.ships-left {\n    text-align: center;\n}\n\n.value {\n    font-weight: bold;\n    font-size: 2rem;\n    color:blue;\n}\n\n.choice-board{\n    height: fit-content;\n    width: fit-content;\n    display: grid;\n    grid-template-rows: repeat(var(--grid-rows), 4vh);\n    grid-template-columns: repeat(var(--grid-cols), 4vh);\n    gap: 1px;\n    border: 2px solid black;\n}\n\n.choice-board .grid-item {\n    cursor: pointer;\n}\n\n.has-ship {\n    background-color: dimgray;\n}\n\n.ship-show {\n    background-color: lightgrey;\n}\n\n.bottom-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    font-size: 3vh;\n    gap: 2vw;\n}\n\n.btn {\n    appearance: none;\n    background-color: white;\n    border: 2px solid #1A1A1A;\n    border-radius: 15px;\n    color: #3B3B3B;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Roobert,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-size: 10px;\n    min-height: 20px;\n    min-width: 100px;\n    font-weight: 600;\n    line-height: normal;\n    margin: 0;\n    outline: none;\n    padding: 16px 24px;\n    text-align: center;\n    text-decoration: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    width: 20%;\n    will-change: transform;\n}\n\n.random {\n    width: 25%;\n}\n\n.horizontal {\n    font-weight: bold;\n}\n\n.btn:disabled {\n  pointer-events: none;\n}\n\n.btn:hover {\n  color: #fff;\n  background-color: #1A1A1A;\n  box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n  transform: translateY(-2px);\n}\n\n.clear:hover {\n    background-color: crimson;\n}\n\n.start:hover,\n.play-again:hover {\n    background-color:rgb(28, 217, 154);\n    color: black;\n}\n\n.btn:active {\n  box-shadow: none;\n  transform: translateY(0);\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n@media (max-width: 750px) {\n\n    .main {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .board-header {\n        font-size: 2.5vw;\n        letter-spacing: 1vw;\n    }\n\n    .board {\n        grid-template-rows: repeat(var(--grid-rows), 2.5rem);\n        grid-template-columns: repeat(var(--grid-cols), 2.5rem);\n        gap: 1px;\n        border: 2px solid black;\n    }\n\n    .overlay-window {\n        height: 400%;\n    }\n\n    .start-game-modal {\n        width: 70%;\n    }\n\n    .end-game-modal {\n        width: 50%;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAQA,gCAAgC;;AAEhC;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,4BAA4B;IAC5B,8BAA8B;IAC9B,iCAAiC;IACjC,0BAA0B;IAC1B,iBAAiB;AACrB;;AAEA,uBAAuB;;AAEvB;IACI,qCAAqC;IACrC,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA,iBAAiB;;AAEjB;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;IAChC,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;AACA;IACI,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,iDAAiD;IACjD,oDAAoD;IACpD,QAAQ;IACR,uBAAuB;AAC3B;;AAEA;IACI,2BAA2B;IAC3B,oCAAoC;AACxC;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kCAAkC;IAClC,8BAA8B;AAClC;;AAEA;IACI,oCAAoC;IACpC,8BAA8B;AAClC;;AAEA,uBAAuB;;AAEvB;IACI,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,YAAY;IACZ,uBAAuB;IACvB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,qBAAqB;IACrB,aAAa;AACjB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA,yBAAyB;;AAEzB,qBAAqB;;AAErB;IACI,aAAa,EAAE,0BAA0B;IACzC,kBAAkB,EAAE,oDAAoD;IACxE,MAAM,EAAE,yBAAyB;IACjC,OAAO,EAAE,yBAAyB;IAClC,WAAW;IACX,gBAAgB;IAChB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,aAAa;IACb,eAAe;IACf,UAAU,EAAE,gDAAgD;IAC5D,QAAQ,EAAE,yBAAyB;IACnC,SAAS,EAAE,yBAAyB;IACpC,yCAAyC,EAAE,mBAAmB;IAC9D,6BAA6B;IAC7B,6CAA6C;IAC7C,0BAA0B;AAC9B;;AAEA;IACI,UAAU;IACV,eAAe;IACf,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,eAAe;IACf,YAAY;AAChB;;AAEA;;IAEI,cAAc;IACd,yCAAyC;IACzC,oBAAoB;AACxB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,QAAQ;AACZ;;AAEA;IACI,QAAQ;AACZ;;AAEA;IACI,cAAc;IACd,qDAAqD;IACrD,iBAAiB;IACjB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,qDAAqD;IACrD,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,cAAc;IACd,QAAQ;AACZ;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,UAAU;AACd;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,iDAAiD;IACjD,oDAAoD;IACpD,QAAQ;IACR,uBAAuB;AAC3B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;IACX,cAAc;IACd,QAAQ;AACZ;;AAEA;IACI,gBAAgB;IAChB,uBAAuB;IACvB,yBAAyB;IACzB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,kJAAkJ;IAClJ,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,mDAAmD;IACnD,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,iBAAiB;AACrB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,yBAAyB;EACzB,0CAA0C;EAC1C,2BAA2B;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,kCAAkC;IAClC,YAAY;AAChB;;AAEA;EACE,gBAAgB;EAChB,wBAAwB;AAC1B;;AAEA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ;;AAEA;;IAEI;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;IACvB;;IAEA;QACI,gBAAgB;QAChB,mBAAmB;IACvB;;IAEA;QACI,oDAAoD;QACpD,uDAAuD;QACvD,QAAQ;QACR,uBAAuB;IAC3B;;IAEA;QACI,YAAY;IAChB;;IAEA;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@200&display=swap');\n\n@import url('https://fonts.googleapis.com/css2?family=Black+Ops+One&display=swap');\n\n@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');\n\n@import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Stencil+Display:wght@800&display=swap');\n\n/*-----GLOBAL DECLARATIONS-----*/\n\n*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\n:root {\n    --cell-border-color:white;\n    --grid-cols: 1;\n    --grid-rows: 1;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-items: space-between;\n    justify-content: space-between;\n    font-family: 'Nunito', sans-serif;\n    background-color:lightgrey;\n    min-height: 100vh;\n}\n\n/*---HEADER SECTION---*/\n\n.header {\n    font-family: 'Black Ops One', cursive;\n    background-color: black;\n    opacity: 0.8;\n    color: white;\n    font-size: 8vw;\n    letter-spacing: 2vw;\n    line-height: 22vh;\n    text-align: center;\n}\n\n/*---MAIN DIV---*/\n\n.main{\n    display: flex;\n    justify-content: center;\n    margin-top: 1vh;\n}\n\n.board-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.board-header {\n    font-family: 'Anton', sans-serif;\n    font-size: 1.5vw;\n    letter-spacing: 0.5vw;\n}\n\n.player {\n    color: green;\n}\n.enemy {\n    color:crimson;\n}\n\n.board {\n    height: fit-content;\n    width: fit-content;\n    margin: 2rem;\n    display: grid;\n    grid-template-rows: repeat(var(--grid-rows), 4vh);\n    grid-template-columns: repeat(var(--grid-cols), 4vh);\n    gap: 1px;\n    border: 3px solid black;\n}\n\n.grid-item {\n    border: 0ch solid gainsboro;\n    background: var(--cell-border-color);\n}\n\n#board-enemy .grid-item {\n    cursor: pointer;\n}\n\n.miss {\n    background-color:rgb(28, 217, 154);\n    cursor: not-allowed !important;\n}\n\n.hit {\n    background-color: crimson !important;\n    cursor: not-allowed !important; \n}\n\n/*---FOOTER SECTION---*/\n\n.footer {\n    font-size: 20px;\n    font-weight: 800;\n    text-align: center;\n    padding: 5px;\n    background-color: black;\n    opacity: 0.8;\n    color: white;\n}\n  \n.footer a:link { \n    text-decoration: none;\n    color: white;\n}\n  \n.footer a:visited { \n    text-decoration: none;\n    color: white;\n}\n  \n.footer a:hover { \n    text-decoration: none;\n    transition: 0.3s ease;\n    color:fuchsia;\n}\n  \n.footer a:active { \n    text-decoration: none;\n    color: white;\n}\n\n/*-----HIDDEN PARTS-----*/\n\n/*--Overlay Window--*/\n\n.overlay-window {\n    display: none; /*invisible when inactive*/\n    position: absolute; /*the div will be fixed even if mouse scrolled down*/\n    top: 0; /*exact place of the div*/\n    left: 0; /*exact place of the div*/\n    width: 100%;\n    min-height: 100%;\n    background-color:black;\n    opacity: 0.7;\n}\n\n.overlay-window.active {\n    display: block;\n}\n\n.end-game-modal,\n.start-game-modal {\n    display: none;\n    position: fixed;\n    z-index: 1; /*the div will be in front of the overlayWindow*/\n    top: 50%; /*exact place of the div*/\n    left: 50%; /*exact place of the div*/\n    transform: translate(-50%, -50%) scale(0); /*will be animated*/\n    transition: 200ms ease-in-out;\n    box-shadow: 0 0 50px rgba(249, 248, 248, 0.5);\n    background-color:gainsboro;\n}\n\n.end-game-modal {\n    width: 40%;\n    min-height: 30%;\n    padding: 2vw;\n    border-radius: 8px;\n}\n\n.start-game-modal {\n    width: 50%;\n    min-height: 80%;\n    padding: 2vw;\n}\n\n.end-game-modal.active,\n.start-game-modal.active {\n    display: block;\n    transform: translate(-50%, -50%) scale(1);\n    animation: fadeIn 1s;\n}\n\n.end-game-modal-content, \n.start-game-modal-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.end-game-modal-content{\n    gap: 2vh;\n}\n\n.start-game-modal-content  {\n    gap: 2vh;\n}\n\n.end-game-modal-message {\n    font-size: 4vw;\n    font-family: 'Big Shoulders Stencil Display', cursive;\n    font-weight: bold;\n    padding: 20px;\n    text-align: center;\n}\n\n.welcome-msg {\n    font-size: 4vh;\n    font-family: 'Big Shoulders Stencil Display', cursive;\n    font-weight: bold;\n}\n\n.place-ship-txt {\n    font-size: 2.5vh;\n    font-weight: 800;\n}\n\n.info {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 3vh;\n    gap: 2vw;\n}\n\n.ships-left {\n    text-align: center;\n}\n\n.value {\n    font-weight: bold;\n    font-size: 2rem;\n    color:blue;\n}\n\n.choice-board{\n    height: fit-content;\n    width: fit-content;\n    display: grid;\n    grid-template-rows: repeat(var(--grid-rows), 4vh);\n    grid-template-columns: repeat(var(--grid-cols), 4vh);\n    gap: 1px;\n    border: 2px solid black;\n}\n\n.choice-board .grid-item {\n    cursor: pointer;\n}\n\n.has-ship {\n    background-color: dimgray;\n}\n\n.ship-show {\n    background-color: lightgrey;\n}\n\n.bottom-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    font-size: 3vh;\n    gap: 2vw;\n}\n\n.btn {\n    appearance: none;\n    background-color: white;\n    border: 2px solid #1A1A1A;\n    border-radius: 15px;\n    color: #3B3B3B;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Roobert,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-size: 10px;\n    min-height: 20px;\n    min-width: 100px;\n    font-weight: 600;\n    line-height: normal;\n    margin: 0;\n    outline: none;\n    padding: 16px 24px;\n    text-align: center;\n    text-decoration: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    width: 20%;\n    will-change: transform;\n}\n\n.random {\n    width: 25%;\n}\n\n.horizontal {\n    font-weight: bold;\n}\n\n.btn:disabled {\n  pointer-events: none;\n}\n\n.btn:hover {\n  color: #fff;\n  background-color: #1A1A1A;\n  box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n  transform: translateY(-2px);\n}\n\n.clear:hover {\n    background-color: crimson;\n}\n\n.start:hover,\n.play-again:hover {\n    background-color:rgb(28, 217, 154);\n    color: black;\n}\n\n.btn:active {\n  box-shadow: none;\n  transform: translateY(0);\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n@media (max-width: 750px) {\n\n    .main {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .board-header {\n        font-size: 2.5vw;\n        letter-spacing: 1vw;\n    }\n\n    .board {\n        grid-template-rows: repeat(var(--grid-rows), 2.5rem);\n        grid-template-columns: repeat(var(--grid-cols), 2.5rem);\n        gap: 1px;\n        border: 2px solid black;\n    }\n\n    .overlay-window {\n        height: 400%;\n    }\n\n    .start-game-modal {\n        width: 70%;\n    }\n\n    .end-game-modal {\n        width: 50%;\n    }\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],l=o.base?s[0]+o.base:s[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var p=t(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var h=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:h,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=o(n,r),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),A=t(565),s=t.n(A),l=t(216),c=t.n(l),d=t(589),p=t.n(d),m=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=c(),e()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const g=function(n){const e=[];let t=!1;for(let t=0;t<n;t++)e.push("");return{body:e,setHorizontally:function(){t=!0},isHorizontal:function(){return t},setVertically:function(){t=!1}}},u=function(){let n=[];for(let e=0;e<100;e++)n.push({isShot:!1,hasShip:!1});function e(n){return Math.floor(Math.random()*n)}function t(e,t){let o=e;if(!1===t.isHorizontal()){if(o+10*t.body.length>99&&t.body.length>1)return!1;for(let e=0;e<t.body.length;e++){if(!0===n[o].hasShip)return!1;o+=10}}else{let r=!0;if(e+t.body.length>99&&t.body.length>1)return!1;for(let e=0;e<t.body.length;e++){if(!1===r)switch(o){case 10:case 20:case 30:case 40:case 50:case 60:case 70:case 80:case 90:return!1}if(r=!1,!0===n[o].hasShip)return!1;o+=1}}return!0}function o(e,t){const o=[];let r=e;if(!1===t.isHorizontal())for(let e=0;e<t.body.length;e++)o.push(r),n[r].hasShip=!0,r+=10;else for(let e=0;e<t.body.length;e++)o.push(r),n[r].hasShip=!0,r+=1;return o}const r={carrier:g(5),battleship:g(4),destroyer:g(3),submarine_1:g(2),submarine_2:g(2),patrolBoat_1:g(1),patrolBoat_2:g(1)};let i=Object.keys(r);return{body:n,showShips:!1,receiveAttack:function(e){n[e].isShot=!0},hasShip:function(e){return n[e].hasShip},areAllShipsSunk:function(){return!!n.find((n=>!0===n.hasShip))&&!n.find((n=>!0===n.hasShip&&!1===n.isShot))},isPlaceable:t,placeShip:o,placeShipsRandomly:function(){n.forEach((n=>{n.isShot=!1,n.hasShip=!1}));const r={carrier:g(5),battleship:g(4),destroyer:g(3),submarine_1:g(2),submarine_2:g(2),patrolBoat_1:g(1),patrolBoat_2:g(1)};Object.keys(r).forEach((n=>{0===e(2)&&r[n].setHorizontally();let i=e(100);for(;!1===t(i,r[n]);)i=e(100);o(i,r[n])}))},getNextShip:function(){return r[i[0]]},removeShipFromArray:function(){i.splice(0,1)},resetBoard:function(){n.forEach((n=>{n.hasShip=!1,n.isShot=!1})),i=Object.keys(r)},resetBoardHits:function(){n.forEach((n=>{n.isShot=!1}))}}},B=u(),f=document.querySelector("[value]"),C=(()=>{const n=document.getElementById("overlay-window"),e=document.getElementById("start-game-modal"),t=document.getElementById("end-game-modal"),o=document.querySelector("[rotate-ship-btn]"),r=document.querySelector("[clear-all-btn]"),i=document.querySelector("[end-game-modal-btn]"),a=n=>{const e=document.getElementById("choice-board");for(;e.firstChild;)e.removeChild(e.firstChild);e.style.setProperty("--grid-rows",10),e.style.setProperty("--grid-cols",10);for(let t=0;t<n.body.length;t++){const o=document.createElement("div");o.dataset.id=t,o.classList.add("grid-item"),!0===n.body[t].hasShip&&o.classList.add("has-ship"),e.appendChild(o)}e.querySelectorAll(".grid-item").forEach((t=>{0!==Number(f.textContent)&&(t.addEventListener("mouseover",(()=>{let r=t.getAttribute("data-id");const i=n.getNextShip();if(i){o.classList.contains("horizontal")?i.setHorizontally():i.setVertically();for(let n=0;n<i.body.length;n++){const n=e.querySelector(`[data-id = '${r}']`);if(!n)return;if(n.classList.add("ship-show"),!0===i.isHorizontal()){if(r=Number(r)+1,10===r||20===r||30===r||40===r||50===r||60===r||70===r||80===r||90===r)return}else r=Number(r)+10}}})),t.addEventListener("mouseout",(()=>{let r=t.getAttribute("data-id");const i=n.getNextShip();if(i){o.classList.contains("horizontal")?i.setHorizontally():i.setVertically();for(let n=0;n<i.body.length;n++){const n=e.querySelector(`[data-id = '${r}']`);if(!n)return;if(n.classList.remove("ship-show"),!0===i.isHorizontal()){if(r=Number(r)+1,10===r||20===r||30===r||40===r||50===r||60===r||70===r||80===r||90===r)return}else r=Number(r)+10}}})),t.addEventListener("click",(()=>{let e=Number(t.getAttribute("data-id"));const r=n.getNextShip();r&&(o.classList.contains("horizontal")?r.setHorizontally():r.setVertically(),!0===n.isPlaceable(e,r)&&(n.placeShip(e,r),a(n),n.removeShipFromArray(),f.textContent=Number(f.textContent)-1))})))}))},A=()=>{f.textContent=7,o.classList.contains("horizontal")&&(o.classList.remove("horizontal"),o.textContent="Horizontal"),B.resetBoard(),a(B)},s=()=>{c(),l(),A(),a(B),I.initGameBoards(B)},l=()=>{n.classList.add("active"),e.classList.add("active")},c=()=>{n.classList.remove("active"),t.classList.remove("active")};return o.addEventListener("click",(()=>{o.classList.toggle("horizontal"),"Horizontal"===o.textContent?o.textContent="Vertical":"Vertical"===o.textContent&&(o.textContent="Horizontal")})),r.addEventListener("click",A),i.addEventListener("click",s),{renderChoiceBoard:a,renderGameBoards:(n,e)=>{const t=document.getElementById(`board-${e}`);for(;t.firstChild;)t.removeChild(t.firstChild);t.style.setProperty("--grid-rows",10),t.style.setProperty("--grid-cols",10);for(let e=0;e<n.body.length;e++){const o=document.createElement("div");o.dataset.id=e,o.classList.add("grid-item"),!0===n.showShips&&!0===n.body[e].hasShip&&o.classList.add("has-ship"),!0===n.body[e].isShot&&(!0===n.body[e].hasShip?o.classList.add("has-ship","hit"):o.classList.add("miss")),t.appendChild(o)}},restartGame:s,closeStartGameModal:()=>{n.classList.remove("active"),e.classList.remove("active")},openEndGameModal:()=>{n.classList.add("active"),t.classList.add("active")}}})(),I=(()=>{const n=document.querySelector("[randomize-btn]"),e=document.querySelector("[start-btn]"),t=n=>{const e=n;e.showShips=!0;const t=u();t.placeShipsRandomly(),C.renderGameBoards(e,"player"),C.renderGameBoards(t,"enemy"),o("enemy",t,e)},o=(n,e,t)=>{document.getElementById(`board-${n}`).querySelectorAll(".grid-item").forEach((a=>{a.addEventListener("click",(a=>{if(!0===a.currentTarget.classList.contains("miss")||a.target.classList.contains("hit"))return;const A=a.currentTarget.getAttribute("data-id");if(e.receiveAttack(A),C.renderGameBoards(e,n),!0===e.areAllShipsSunk()&&r(n),e.hasShip(A))return o(n,e,t),void("player"===n&&setTimeout((()=>{const n=document.getElementById("board-player");let t=i(100);for(;!0===e.body[t].isShot;)t=i(100);n.querySelector(`[data-id='${t}']`).click()}),300));"enemy"===n?setTimeout((()=>{o("player",t,e);const n=document.getElementById("board-player");let r=i(100);for(;!0===t.body[r].isShot;)r=i(100);n.querySelector(`[data-id='${r}']`).click()}),300):setTimeout((()=>{o("enemy",t,e)}),200)}))}))},r=n=>{C.openEndGameModal();document.querySelector("[end-game-modal-message]").textContent="player"===n?"🙁 You Lost! 🙁":"🎉 You Won! 🎉"},i=n=>Math.floor(Math.random()*n);return n.addEventListener("click",(()=>{B.placeShipsRandomly(),f.textContent=0,C.renderChoiceBoard(B)})),e.addEventListener("click",(()=>{0===Number(f.textContent)&&(B.resetBoardHits(),t(B),C.closeStartGameModal())})),{initGameBoards:t}})();C.restartGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,